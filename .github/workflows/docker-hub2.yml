name: Publish Docker

on:
  push:
    tags:
    - 'docker-test-v*'

jobs:

  build-aiida-core:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        requirements: ["1.2.1", "1.2.1-atomic", "qe-3.0.0"]
      fail-fast: false

    # currently based on https://github.com/docker/build-push-action/issues/50
    # TODO use buildkit: https://dev.to/pst418/speed-up-multi-stage-docker-builds-in-ci-cd-with-buildkit-s-registry-cache-11gi
    steps:
    - uses: actions/checkout@master
    - name: login to docker hub
      run: echo ${{ secrets.DOCKER_HUB }} | docker login --username chrisjsewell --password-stdin
    - name: Pull cache (compile)
      run: docker pull chrisjsewell/aiida-core-compile:${{ matrix.requirements }} || true
    - name: Build and push image (compile)
      uses: docker/build-push-action@v1
      env:
          DOCKER_BUILDKIT: 1
      with:
        path: builds/aiida-core/
        dockerfile: builds/aiida-core/Dockerfile
        repository: chrisjsewell/aiida-core-compile
        username: chrisjsewell
        password: ${{ secrets.DOCKER_HUB }}
        tags: ${{ matrix.requirements }}
        build_args: "REQUIREMENTS=${{ matrix.requirements }}"
        cache_froms: "chrisjsewell/aiida-core-compile:${{ matrix.requirements }}"
        target: compile-image
    - name: Pull cache (main)
      run: docker pull chrisjsewell/aiida-core:${{ matrix.requirements }} || true
    - name: Build and push image (main)
      uses: docker/build-push-action@v1
      env:
          DOCKER_BUILDKIT: 1
      with:
        path: builds/aiida-core/
        dockerfile: builds/aiida-core/Dockerfile
        repository: chrisjsewell/aiida-core
        username: chrisjsewell
        password: ${{ secrets.DOCKER_HUB }}
        tags: ${{ matrix.requirements }}
        build_args: "REQUIREMENTS=${{ matrix.requirements }}"
        cache_froms: "chrisjsewell/aiida-core-compile:${{ matrix.requirements }},chrisjsewell/aiida-core:${{ matrix.requirements }}"
        target: build-image

  build-qe:

    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      matrix:
        qe_version: ["qe-6.5"]
        qe_make: ["pw", "pwall"]
      fail-fast: false

    steps:
    - uses: actions/checkout@master
    - name: login to docker hub
      run: echo ${{ secrets.DOCKER_HUB }} | docker login --username chrisjsewell --password-stdin
    - name: Pull cache (compile)
      run: docker pull chrisjsewell/quantum-espresso-compile:${{ matrix.qe_version }}-${{ matrix.qe_make }} || true
    - name: Build and push image (comile)
      uses: docker/build-push-action@v1
      env:
          DOCKER_BUILDKIT: 1
      with:
        path: builds/quantum-espresso/
        dockerfile: builds/quantum-espresso/Dockerfile
        repository: chrisjsewell/quantum-espresso-compile
        username: chrisjsewell
        password: ${{ secrets.DOCKER_HUB }}
        tags: ${{ matrix.qe_version }}-${{ matrix.qe_make }}
        build_args: "QE_GIT_TAG=${{ matrix.qe_version }},QE_MAKE=${{ matrix.qe_make }}"
        cache_froms: "chrisjsewell/quantum-espresso-compile:${{ matrix.qe_version }}-${{ matrix.qe_make }}"
        target: compile-image
    - name: Pull cache (main)
      run: docker pull chrisjsewell/quantum-espresso:${{ matrix.qe_version }}-${{ matrix.qe_make }} || true
    - name: Build and push image (main)
    - uses: docker/build-push-action@v1
      env:
          DOCKER_BUILDKIT: 1
      with:
        path: builds/quantum-espresso/
        dockerfile: builds/quantum-espresso/Dockerfile
        repository: chrisjsewell/quantum-espresso
        username: chrisjsewell
        password: ${{ secrets.DOCKER_HUB }}
        tags: ${{ matrix.qe_version }}-${{ matrix.qe_make }}
        build_args: "QE_GIT_TAG=${{ matrix.qe_version }},QE_MAKE=${{ matrix.qe_make }}"
        cache_froms: "chrisjsewell/quantum-espresso-compile:${{ matrix.qe_version }}-${{ matrix.qe_make }},chrisjsewell/quantum-espresso:${{ matrix.qe_version }}-${{ matrix.qe_make }}}"
        target: build-image
